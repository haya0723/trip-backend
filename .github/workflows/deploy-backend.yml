name: Deploy Backend to Cloud Run

on:
  push:
    branches:
      - main # mainブランチへのプッシュ時に実行 (または master など、お使いのブランチ名に合わせてください)

env:
  GCP_PROJECT_ID: tbs-ai-metadata # Google CloudプロジェクトID
  GAR_LOCATION: asia-northeast1 # Artifact Registryのリージョン
  GAR_REPOSITORY: trip-app-repo-v2 # Artifact Registryのリポジトリ名
  SERVICE_NAME: trip-app-final-v2 # Cloud Runサービス名
  REGION: asia-northeast1 # Cloud Runリージョン
  IMAGE_NAME: trip-backend-image # Dockerイメージ名

jobs:
  deploy:
    name: Build, Push, and Deploy
    runs-on: ubuntu-latest

    permissions:
      contents: 'read'
      id-token: 'write' # Workload Identity Federation を使用する場合

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Authenticate to Google Cloud
        uses: 'google-github-actions/auth@v2'
        with:
          credentials_json: '${{ secrets.GCP_SA_KEY }}' # GitHub Secretsからサービスアカウントキーを読み込む

      - name: Set up Cloud SDK
        uses: 'google-github-actions/setup-gcloud@v2'

      - name: Configure Docker
        run: gcloud auth configure-docker ${{ env.GAR_LOCATION }}-docker.pkg.dev

      - name: Build Docker image
        run: |
          IMAGE_TAG=$(date +%Y%m%d%H%M%S)-${GITHUB_SHA::7}
          docker build --platform linux/amd64 -t ${{ env.GAR_LOCATION }}-docker.pkg.dev/${{ env.GCP_PROJECT_ID }}/${{ env.GAR_REPOSITORY }}/${{ env.IMAGE_NAME }}:$IMAGE_TAG -f Dockerfile .
          echo "IMAGE_WITH_TAG=${{ env.GAR_LOCATION }}-docker.pkg.dev/${{ env.GCP_PROJECT_ID }}/${{ env.GAR_REPOSITORY }}/${{ env.IMAGE_NAME }}:$IMAGE_TAG" >> $GITHUB_ENV

      - name: Push Docker image to Artifact Registry
        run: docker push ${{ env.IMAGE_WITH_TAG }}

      - name: Download Cloud SQL Proxy
        run: |
          wget https://storage.googleapis.com/cloud-sql-connectors/cloud-sql-proxy/v2.8.2/cloud-sql-proxy.linux.amd64 -O cloud-sql-proxy
          chmod +x cloud-sql-proxy

      - name: Run Database Migrations
        env:
          DB_USER: ${{ secrets.DB_USER }}
          DB_PASSWORD: ${{ secrets.DB_PASSWORD }}
          DB_NAME: ${{ secrets.DB_NAME }}
          # DB_HOST はUnixソケットパスを使用するため、ここでは設定しない
          DATABASE_URL: postgres://${{ secrets.DB_USER }}:${{ secrets.DB_PASSWORD }}@localhost:5432/${{ secrets.DB_NAME }} # ローカルプロキシ経由
          CLOUD_SQL_INSTANCE_CONNECTION_NAME: ${{ secrets.CLOUD_SQL_INSTANCE_CONNECTION_NAME }}
        run: |
          ./cloud-sql-proxy --address 0.0.0.0 --port 5432 $CLOUD_SQL_INSTANCE_CONNECTION_NAME &
          PROXY_PID=$!
          sleep 5 # プロキシ起動待ち
          npm install # node-pg-migrate と dotenv をインストール
          npm run migrate up
          kill $PROXY_PID
          wait $PROXY_PID || true # プロキシが正常終了しなくてもワークフローを続行

      - name: Deploy to Cloud Run
        run: |
          gcloud run deploy ${{ env.SERVICE_NAME }} \
            --image ${{ env.IMAGE_WITH_TAG }} \
            --platform managed \
            --region ${{ env.REGION }} \
            --allow-unauthenticated \
            --set-env-vars="DB_USER=${{ secrets.DB_USER }},DB_PASSWORD=${{ secrets.DB_PASSWORD }},DB_NAME=${{ secrets.DB_NAME }},DB_HOST=/cloudsql/${{ secrets.CLOUD_SQL_INSTANCE_CONNECTION_NAME }},JWT_SECRET=${{ secrets.JWT_SECRET }}" \
            --add-cloudsql-instances=${{ secrets.CLOUD_SQL_INSTANCE_CONNECTION_NAME }} \
            --service-account=${{ secrets.CLOUD_RUN_SA_EMAIL }} \
            --quiet
